<script setup lang="ts">
import { ref, onMounted } from 'vue';
import Navbar from '~/components/Navbar.vue';

// Gestion de l'état du thème
const isDarkMode = ref(false);

// Fonction pour basculer le thème
const toggleDarkMode = () => {
  isDarkMode.value = !isDarkMode.value;
};

// Appliquer la classe CSS correspondante au body
onMounted(() => {
  const applyTheme = () => {
    if (isDarkMode.value) {
      document.body.classList.add('dark-mode');
      document.body.classList.remove('light-mode');
    } else {
      document.body.classList.add('light-mode');
      document.body.classList.remove('dark-mode');
    }
  };

  // Appliquer le thème initialement
  applyTheme();

  // Regarder les changements de isDarkMode pour ré-appliquer le thème
  watch(isDarkMode, applyTheme);
});
</script>

<template>
  <div :class="['vh-100', isDarkMode ? 'dark-mode' : 'light-mode']">
    <Navbar :isDarkMode="isDarkMode" @toggleDarkMode="toggleDarkMode" />
    <NuxtPage />
  </div>
</template>

<style>
:root {
  --background-color-day: #dfdad8;
  --background-color-night: #121212;
  --text-color-day: #000000;
  --text-color-night: #ffffff;
}

body.light-mode {
  background-color: var(--background-color-day);
  color: var(--text-color-day);
}

body.dark-mode {
  background-color: var(--background-color-night);
  color: var(--text-color-night);
}

.card {
  background-color: var(--background-color-day);
  border: none;
  border-radius: 20px;
  box-shadow: 10px 5px 5px rgb(180, 180, 180);
}

body.dark-mode .card {
  background-color: var(--background-color-night);
  box-shadow: 10px 5px 5px rgba(0, 0, 0, 0.5);
}

.page-enter-active,
.page-leave-active {
  transition: all 0.2s;
}

.page-enter-from,
.page-leave-to {
  opacity: 0;
  filter: blur(1rem);
}

h1 {
  font-size: 1.8rem;
  color: var(--text-color-day);
  font-weight: bold;
}

body.dark-mode h1 {
  color: var(--text-color-night);
}
</style>